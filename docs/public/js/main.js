// Generated by Haxe 4.0.5
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() {
	this._storage = null;
	this.storageName = "skeletor";
	this.hasStorage = false;
	this.contentArray = [];
	this.publicSpreadsheetUrl = "https://docs.google.com/spreadsheets/d/1KhcMZv01CfiAvCPhL8nVTXEJ2oRcLgSlj5UNX40jTsM/edit?usp=sharing";
	var _gthis = this;
	window.document.addEventListener("DOMContentLoaded",function(event) {
		window.console.log("Dom ready :: build: " + "2020-05-20 16:04:33" + " ");
		if(_gthis.get_storage() != null) {
			console.log("src/Main.hx:41:","hasStorage : " + Std.string(_gthis.hasStorage));
		}
		console.log("src/Main.hx:43:",Template.createVue());
		_gthis.initHomepage();
		_gthis.initTabletop();
	});
};
Main.__name__ = true;
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	initHomepage: function() {
		this.vm = new Vue({ el : "#app", data : { showloading : !this.hasStorage, sheet : this.contentArray, message : "Content from this page from google spreadsheet and vue.js"}});
	}
	,initTabletop: function() {
		Tabletop.init({ key : this.publicSpreadsheetUrl, callback : $bind(this,this.showInfo), simpleSheet : true});
	}
	,showInfo: function(data,tabletop) {
		this.showSnackbar("Successfully updated!");
		this.vm.showloading = false;
		this.vm.sheet = data;
		this.set_storage(data);
	}
	,showLoading: function(isLoading,isDark) {
		if(isDark == null) {
			isDark = false;
		}
		var x = window.document.getElementById("loading");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "loading";
			div.innerHTML = "<i class=\"fas fa-sync-alt fa-spin fa-3x\"></i><span class=\"sr-only\">Loading...</span>";
			window.document.body.appendChild(div);
			x = div;
		}
		if(isLoading) {
			x.className = "show";
		} else {
			x.className = "hide";
		}
	}
	,showSnackbar: function(msg) {
		var x = window.document.getElementById("snackbar");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "snackbar";
			window.document.body.appendChild(div);
			x = div;
		}
		x.innerText = msg;
		x.className = "show";
		setTimeout(function() {
			x.className = x.className.replace("show","");
		},3000);
	}
	,get_storage: function() {
		if(window.localStorage.getItem(this.storageName) != null) {
			this._storage = window.localStorage.getItem(this.storageName);
			this.contentArray = JSON.parse(this._storage).data;
			this.hasStorage = true;
		}
		return this._storage;
	}
	,set_storage: function(value) {
		var obj = { date : new Date(), data : value};
		window.localStorage.setItem(this.storageName,JSON.stringify(obj));
		this.contentArray = JSON.parse(JSON.stringify(value));
		this.hasStorage = true;
		return this._storage = value;
	}
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var Template = function() { };
Template.__name__ = true;
Template.createVue = function() {
	var html = template_Html.p({ text : "{{ message }}"});
	var html1 = template_Html.el("i",{ "class" : "fas fa-sync-alt fa-spin fa-3x"});
	var html2 = template_Html.span({ "class" : "sr-only", text : "Loading..."});
	var html3 = template_Html.div({ "id" : "loadervue", "v-if" : "showloading"},[html1,html2]);
	var html4 = template_TVue.transition({ "name" : "custom-classes-transition", "enter-active-class" : "animated fadeIn", "leave-active-class" : "animated fadeOut"},[html3]);
	var html5 = template_Html.h5({ _class : "card-title", text : "{{ item.title }}"});
	var html6 = template_Html.p({ _class : "card-text", text : "{{ item.body }}"});
	var html7 = template_Html.a({ href : "#", _class : "btn btn-primary", text : "read more"});
	var html8 = template_Html.div({ _class : "card-body"},[html5,html6,html7]);
	var html9 = template_Html.div({ _class : "card"},[html8]);
	var html10 = template_Html.div({ _class : "col-sm-12 col-md-6 col-lg-4", "v-for" : "item in sheet"},[html9]);
	var html11 = template_Html.div({ _class : "row"},[html10]);
	var html12 = template_TVue.vue([template_Html.div({ id : "app"},[html,html4,html11])]);
	return html12.toString();
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var model_constants_App = function() { };
model_constants_App.__name__ = true;
var template_Html = function() { };
template_Html.__name__ = true;
template_Html.html = function(elements) {
	template_El.reset();
	return new template_El("",{ },elements);
};
template_Html.template = function(att,elements) {
	return new template_El("template",att,elements);
};
template_Html.el = function(el,att,elements) {
	return new template_El(el,att,elements);
};
template_Html.root = function(att,elements) {
	return new template_El("html",att,elements);
};
template_Html.head = function(att,elements) {
	return new template_El("head",att,elements);
};
template_Html.body = function(att,elements) {
	return new template_El("body",att,elements);
};
template_Html.meta = function(att,elements) {
	return new template_El("meta",att,elements);
};
template_Html.link = function(att,elements) {
	return new template_El("link",att,elements);
};
template_Html.style = function(att,elements) {
	return new template_El("style",att,elements);
};
template_Html.script = function(att,elements) {
	return new template_El("style",att,elements);
};
template_Html.comment = function(att,elements) {
	var temp = { };
	if(typeof(att) == "string") {
		temp.text = att;
	} else {
		temp = att;
	}
	return new template_El("comment",temp,elements);
};
template_Html.title = function(att,elements) {
	var temp = { };
	if(typeof(att) == "string") {
		temp.text = att;
	} else {
		temp = att;
	}
	return new template_El("title",temp,elements);
};
template_Html.print = function(att,elements) {
	var temp = { };
	if(typeof(att) == "string") {
		temp.text = att;
	} else {
		temp = att;
	}
	return new template_El("print",temp,elements);
};
template_Html.ol = function(att,elements) {
	return new template_El("ol",att,elements);
};
template_Html.ul = function(att,elements) {
	return new template_El("ul",att,elements);
};
template_Html.li = function(att,elements) {
	return new template_El("li",att,elements);
};
template_Html.div = function(att,elements) {
	return new template_El("div",att,elements);
};
template_Html.span = function(att,elements) {
	return new template_El("span",att,elements);
};
template_Html.button = function(att,elements) {
	return new template_El("button",att,elements);
};
template_Html.img = function(att,elements) {
	return new template_El("img",att,elements);
};
template_Html.a = function(att,elements) {
	return new template_El("a",att,elements);
};
template_Html.p = function(att,elements) {
	return new template_El("p",att,elements);
};
template_Html.h1 = function(att,elements) {
	return new template_El("h1",att,elements);
};
template_Html.h2 = function(att,elements) {
	return new template_El("h2",att,elements);
};
template_Html.h3 = function(att,elements) {
	return new template_El("h3",att,elements);
};
template_Html.h4 = function(att,elements) {
	return new template_El("h4",att,elements);
};
template_Html.h5 = function(att,elements) {
	return new template_El("h5",att,elements);
};
template_Html.h6 = function(att,elements) {
	return new template_El("h6",att,elements);
};
var template_El = function(name,att,elements) {
	this.elements = [];
	this.emptyElementArray = ["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"];
	this.name = name;
	this.att = att;
	this.elements = elements;
};
template_El.__name__ = true;
template_El.reset = function() {
	template_El._html = "";
};
template_El.prototype = {
	convert: function(name,att,elements,count) {
		if(count == null) {
			count = 0;
		}
		var tab = "";
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			tab += "\t";
		}
		var isDone = false;
		var isEmpty = false;
		var className = "";
		if(name != "") {
			if(this.emptyElementArray.indexOf(name) != -1) {
				isEmpty = true;
			}
			switch(name) {
			case "comment":
				template_El._html += "" + tab + "<!--";
				break;
			case "if":case "iff":case "swig_if":case "{%":
				template_El._html += "" + tab + "{% if " + att.text + " %}";
				break;
			case "print":case "print_end":case "print_start":
				template_El._html += "" + tab;
				break;
			case "swig_comment":case "{#":
				template_El._html += "" + tab + "{#";
				break;
			case "swig_var":case "{{":
				template_El._html += "" + tab + "{{";
				break;
			default:
				template_El._html += "" + tab + "<" + name;
			}
			var attArr = Reflect.fields(att);
			var _g2 = 0;
			var _g3 = attArr.length;
			while(_g2 < _g3) {
				var j = _g2++;
				var _att = attArr[j];
				var _attName = attArr[j];
				switch(_att.toString()) {
				case "_class":case "clas":case "class":
					className = Reflect.field(att,_att);
					_attName = "class";
					break;
				default:
				}
				if(_att == "text") {
					continue;
				}
				if(_att.indexOf("print") != -1) {
					template_El._html += Std.string(Reflect.field(att,_att));
					continue;
				}
				template_El._html += " " + _attName + "=\"" + Std.string(Reflect.field(att,_att)) + "\"";
			}
			if(att != null && att.text != null) {
				switch(name) {
				case "comment":
					isDone = true;
					template_El._html += " " + att.text + " -->\n";
					break;
				case "if":case "iff":case "swig_if":case "{%":
					isDone = true;
					template_El._html += "{% endif %}\n";
					break;
				case "print":case "print_end":case "print_start":
					isDone = true;
					template_El._html += "" + att.text + "\n";
					break;
				case "swig_comment":case "{#":
					isDone = true;
					template_El._html += " " + att.text + " #}\n";
					break;
				case "swig_var":case "{{":
					isDone = true;
					template_El._html += " " + att.text + " }}\n";
					break;
				default:
					if(elements == null) {
						isDone = true;
						template_El._html += ">" + att.text.split("\n").join("\n" + tab) + "</" + name + ">\n";
					} else {
						template_El._html += ">" + att.text.split("\n").join("\n" + tab) + "\n";
					}
				}
			} else {
				if(isEmpty) {
					isDone = true;
				}
				template_El._html += ">\n";
			}
			if(elements != null) {
				++count;
				var _g4 = 0;
				var _g5 = elements.length;
				while(_g4 < _g5) {
					var i1 = _g4++;
					var el = elements[i1];
					this.convert(el.name,el.att,el.elements,count);
				}
			}
			if(!isDone) {
				if(name == "div" && className != "") {
					template_El._html += "" + tab + "</" + name + "><!-- /." + className + " -->\n";
				} else {
					template_El._html += "" + tab + "</" + name + ">\n";
				}
			}
		} else {
			template_El._html += "<!-- This template is generated with Haxe. Do not edit! -->\n";
			var _g21 = 0;
			var _g31 = elements.length;
			while(_g21 < _g31) {
				var i2 = _g21++;
				var el1 = elements[i2];
				this.convert(el1.name,el1.att,el1.elements,0);
			}
		}
		return template_El._html;
	}
	,toString: function() {
		return this.convert(this.name,this.att,this.elements);
	}
};
var template_Out = function() { };
template_Out.__name__ = true;
template_Out.write = function(html,name) {
	console.log("template/Out.hx:12:",html.toString());
};
var template_TVue = function() { };
template_TVue.__name__ = true;
template_TVue.vue = function(elements) {
	template_El.reset();
	return new template_El("",{ },elements);
};
template_TVue.routerView = function(att,elements) {
	return new template_El("router-view",att,elements);
};
template_TVue.routerLink = function(att,elements) {
	return new template_El("router-link",att,elements);
};
template_TVue.transition = function(att,elements) {
	return new template_El("transition",att,elements);
};
template_TVue.__super__ = template_Html;
template_TVue.prototype = $extend(template_Html.prototype,{
});
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
model_constants_App.URL = "https://";
model_constants_App.PROJECT_NAME = "[SkeletorSheet]";
template_El._html = "";
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
